name: Use nvfetcher update package

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  update-pkgs:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.branch.outputs.branch }}
      update_available: ${{ steps.changes.outputs.update_available }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - slug: Update package
            job_name: Use nvfetcher update package
            nix-command: develop -c nvfetcher
    name: ${{ matrix.slug }}
    steps:
      - name: Set swap space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - name: Checkout repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Install nix
        uses: cachix/install-nix-action@v19
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Set branch name output
        id: branch
        run: |
          echo "branch=ci/automatic-update-$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
      - name: Create branch locally
        run: |
          git switch -c ${{ steps.branch.outputs.branch }}
      - name: Setup git
        run: |
          git config --global user.email "51398008+Actoriu@users.noreply.github.com"
          git config --global user.name "Actoriu"
      - name: ${{ matrix.job_name }}
        uses: nick-invision/retry@v2.8.3
        with:
          max_attempts: 2
          timeout_minutes: 720
          retry_on: error
          command: |
            nix \
              --log-format bar-with-logs \
              --option keep-going true \
              --show-trace \
              ${{ matrix.nix-command }}
      - name: Check for changes
        id: changes
        run: |
          if git diff --exit-code origin/main...; then
            echo "update_available=false" >> $GITHUB_OUTPUT
          else
            echo "update_available=true" >> $GITHUB_OUTPUT
          fi
      - name: Push changes
        if: steps.changes.outputs.update_available == 'true'
        run: |
          git push --force origin ${{ steps.branch.outputs.branch }}

  merge:
    runs-on: ubuntu-latest
    needs:
      - update-pkgs
    steps:
      - name: Set swap space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - name: Checkout repository
        uses: actions/checkout@3.3.0
      - name: Check if update branch is behind main
        run: |
          git diff origin/${{ needs.update.outputs.branch }}...origin/main --exit-code
      - name: Merge update into main
        run: |
          git merge origin/${{ needs.update.outputs.branch }}
      - name: Push main
        run: |
          git push origin main
      - name: Delete update branch
        run: |
          git push --delete origin ${{ needs.update.outputs.branch }}
