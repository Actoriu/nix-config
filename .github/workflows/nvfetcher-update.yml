name: "chore: Updates nvfetcher"

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:
  push:
    paths:
      - pkgs/sources.toml

jobs:
  update-nvfetcher:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Set swap space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
      - name: Install nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Setup cachix
        uses: cachix/cachix-action@v12
        with:
          name: nix-actions
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          extraPullNames: nix-community,nix-on-droid
      - name: Cache nvfetcher
        uses: actions/cache@v3.3.1
        with:
          path: |
            pkgs/_sources/.shake.database
            ~/.local/share/nvfetcher
          key: |
            ${{ runner.os }}-${{ hashFiles('pkgs/sources.toml') }}-${{ hashFiles('pkgs/_sources/generated.nix') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('pkgs/sources.toml') }}-
      - name: Setup nix-shell
        uses: workflow/nix-shell-action@v3.2.1
        id: update_nvfetcher
        with:
          packages: nvfetcher
          script: |
            cd pkgs
            echo "OUTPUT<<EOF" >> $GITHUB_OUTPUT
            echo "$(nvfetcher -c ./sources.toml | sed -n '/Changes/,/$!d/p')" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
      - name: Generate token
        uses: tibdex/github-app-token@v1.8.0
        id: generate-token
        with:
          app_id: "${{ secrets.APP_ID }}"
          private_key: "${{ secrets.APP_PRIVATE_KEY }}"
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5.0.1
        with:
          token: "${{ steps.generate-token.outputs.token }}"
          title: "chore(deps): update packages managed by nvfetcher"
          commit-message: "chore(deps): update packages managed by nvfetcher"
          delete-branch: true
          committer: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          body: |
            ${{ steps.update_nvfetcher.outputs.OUTPUT }}
      - name: Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: "${{ steps.generate-token.outputs.token }}"
          pull-request-number: "${{ steps.cpr.outputs.pull-request-number }}"
          merge-method: squash
