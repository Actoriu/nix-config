name: Build flake outputs

on:
  workflow_run:
    workflows: [Check Syntax]
    types:
      - completed

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - slug: Nixos
            job_name: Build NixOS system configuration
            nix-command: build .#nixosConfigurations.d630.config.system.build.toplevel
          - slug: Home-manager
            job_name: Build NixOS user configuration
            nix-command: build .#homeConfigurations."actoriu@d630".activationPackage
          - slug: Nix-on-droid
            job_name: Build Nix-on-droid user configuration
            nix-command: build .#nixOnDroidConfigurations.oneplus5.activationPackage --impure
    name: ${{ matrix.slug }}
    steps:
      - name: Set swap space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Install nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            extra-platforms = aarch64-linux i686-linux
            keep-going = true
            show-trace = true
      - name: Setup cachix
        uses: cachix/cachix-action@v12
        with:
          name: nix-actions
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          extraPullNames: nix-community,nix-on-droid
      - name: ${{ matrix.job_name }}
        uses: nick-invision/retry@v2.8.3
        with:
          max_attempts: 2
          timeout_minutes: 720
          retry_on: error
          command: |
            cachix watch-exec nix-actions -- \
              nix \
                --log-format bar-with-logs \
                ${{ matrix.nix-command }}
