name: update-flakes

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  get-flakes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-flakes.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - name: generate flake matrix
        id: get-flakes
        run: |
          get_flake_inputs() {
            nix flake metadata --json \
              | jq -c '
                  .locks.nodes.root.inputs
                  | {flake: keys}'
          }
          echo "::set-output name=matrix::$(get_flake_inputs)"

  update-flake:
    name: update-${{ matrix.flake }}
    runs-on: ubuntu-latest
    needs:
      - get-flakes
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-flakes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes recursive-nix
      - uses: tibdex/github-app-token@v1.5.2
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: cpcloud/flake-update-action@v1.0.2
        with:
          dependency: ${{ matrix.flake }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-token: ${{ steps.generate-token.outputs.token }}
          pull-request-author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          pull-request-branch-prefix: update-
          pull-request-labels: dependencies,autorebase:opt-in
          automerge: true
          delete-branch: true
